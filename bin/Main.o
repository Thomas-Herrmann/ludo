{-# LINE 1 "C:\Users\Thomas\AppData\Local\Temp\ghc12532_1\ghc_6.s" #-}
.data
	.align 4
.align 1
.globl __stginit_Main
__stginit_Main:
.data
	.align 4
.align 1
.globl Main_mainzuf1_closure
Main_mainzuf1_closure:
	.long	Main_mainzuf1_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c2Ww_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	115
	.byte	44
	.byte	102
	.byte	41
	.byte	123
	.byte	72
	.byte	97
	.byte	115
	.byte	116
	.byte	101
	.byte	91
	.byte	115
	.byte	93
	.byte	32
	.byte	61
	.byte	32
	.byte	102
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_mainzuf1_info
Main_mainzuf1_info:
.Lc2Wy:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc2WF
.Lc2WG:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc2Wv
.Lc2Wu:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl c2Ww_str+3,%eax
	movl $c2WC_info,-16(%ebp)
	addl $-16,%ebp
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call eval
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc2Wv:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c2WC_info:
.Lc2WC:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc2WJ
.Lc2WI:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lc2WF:
	jmp *-16(%ebx)
.Lc2WJ:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_main1_closure
Main_main1_closure:
	.long	Main_main1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
s2W4_info:
.Lc2XI:
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc2XU
.Lc2XV:
	movl $c2XF_info,-4(%ebp)
	movl 12(%esi),%esi
	addl $-4,%ebp
	testw $7,%si
	jne .Lc2XF
.Lc2XG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c2XF_info:
.Lc2XF:
	movl $c2XN_info,(%ebp)
	movl 3(%esi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call suspendThread
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call Number
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%eax
	pushl %eax
#	gstt %fake0,148(%esp)
	fld %st(0) ; fstpt 148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
#	gldt 136(%esp),%fake0
	fldt 136(%esp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	0
	.long	32
c2XN_info:
.Lc2XN:
	movl $c2XR_info,(%ebp)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,196(%esp)
	movl 104(%eax),%edx
	movl %edx,208(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,220(%esp)
	movl 196(%esp),%ecx
	subl %edx,%ecx
	movl 208(%esp),%edx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	sbbl %ecx,%edx
	movl 232(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call suspendThread
	addl $12,%esp
	subl $4,%esp
#	gldsd 104(%ebx),%fake0
	fldl 104(%ebx) ; fstp %st(1)
	subl $8,%esp
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,256(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call jsTrunc
	addl $12,%esp
	subl $8,%esp
	movl 252(%esp),%ecx
	pushl %ecx
	movl %eax,268(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,268(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,280(%esp)
	movl %eax,%ecx
	movl %edx,292(%esp)
	movl 280(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 268(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,304(%esp)
	movl 292(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 304(%esp),%ecx
	adcl %eax,%ecx
	movl 268(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 256(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	0
	.long	32
c2XR_info:
.Lc2XR:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc2Y0
.Lc2XZ:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc2XU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc2Y0:
	movl $8,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	S2Zc_srt-(s2W8_info)+0
	.long	131077
	.long	65536
	.long	196619
s2W8_info:
.Lc2Yj:
	movl 8(%ebx),%eax
	movl %esi,%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .Lc2Yk
.Lc2Yl:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lc2Yn
.Lc2Ym:
	movl $s2W4_info,-12(%edi)
	movl %eax,(%edi)
	movl $c2Yh_info,-4(%ebp)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp Ludo_move1_info
.text
	.align 4,0x90
	.long	S2Zc_srt-(c2Yh_info)+0
	.long	0
	.long	65568
c2Yh_info:
.Lc2Yh:
	movl $DTkUIHCJaUgHU6UDGcO9WY_HasteziPrimziAny_jsNull_closure,%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lc2Yn:
	movl $16,904(%ebx)
.Lc2Yk:
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp *-8(%ebx)
.section .rodata
	.align 4
.align 1
c2YM_str:
	.byte	109
	.byte	111
	.byte	118
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	S2Zc_srt-(Main_main1_info)+0
	.long	65539
	.long	0
	.long	983055
.globl Main_main1_info
Main_main1_info:
.Lc2Yq:
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc2YB
.Lc2YC:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc2YE
.Lc2YD:
	movl $s2W8_info,-4(%edi)
	movl $c2Yy_info,-4(%ebp)
	addl $-4,%ebp
	movl 1(%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,220(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,232(%esp)
	movl 104(%ecx),%eax
	movl %eax,244(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,256(%esp)
	movl 232(%esp),%edx
	subl %eax,%edx
	movl 244(%esp),%eax
	movl %edx,268(%esp)
	movl 256(%esp),%edx
	sbbl %edx,%eax
	movl 268(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 224(%esp),%ecx
	pushl %ecx
	pushl $2
	movl %eax,292(%esp)
	call __createJSFunc
	addl $12,%esp
	subl $8,%esp
	movl 288(%esp),%ecx
	pushl %ecx
	movl %eax,304(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,304(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,316(%esp)
	movl %eax,%ecx
	movl %edx,328(%esp)
	movl 316(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 304(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,340(%esp)
	movl 328(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 340(%esp),%ecx
	adcl %eax,%ecx
	movl 304(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 292(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	S2Zc_srt-(c2Yy_info)+12
	.long	0
	.long	65568
c2Yy_info:
.Lc2Yy:
	movl $c2YA_info,-4(%ebp)
	movl %esi,%eax
	movl $Main_mainzuf1_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc2YA
.Lc2YH:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	65
	.long	32
c2YA_info:
.Lc2YA:
	movl c2YM_str+3,%eax
	movl 4(%ebp),%ecx
	movl $c2YT_info,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %eax,76(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,100(%esp)
	movl 104(%edx),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %ecx,%eax
	movl 112(%esp),%ecx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%ecx
	movl 136(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call __app2
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc2YE:
	movl $8,904(%ebx)
.Lc2YB:
	movl $Main_main1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	0
	.long	32
c2YT_info:
.Lc2YT:
	addl $4,%ebp
	jmp DTkUIHCJaUgHU6UDGcO9WY_HasteziPrimziAny_zdfFromAnyZLZR4_info
.data
	.align 4
.align 1
.globl Main_main_closure
Main_main_closure:
	.long	Main_main_info
	.long	0
.text
	.align 4,0x90
	.long	S2Zc_srt-(Main_main_info)+8
	.long	65539
	.long	0
	.long	65551
.globl Main_main_info
Main_main_info:
.Lc30t:
	jmp Main_main1_info
.data
	.align 4
.align 1
.globl Main_main2_closure
Main_main2_closure:
	.long	Main_main2_info
	.long	0
.text
	.align 4,0x90
	.long	S2Zc_srt-(Main_main2_info)+8
	.long	65539
	.long	0
	.long	327695
.globl Main_main2_info
Main_main2_info:
.Lc30E:
	movl $Main_main1_closure+1,8(%ebx)
	jmp base_GHCziTopHandler_runMainIO1_info
.data
	.align 4
.align 1
.globl ZCMain_main_closure
ZCMain_main_closure:
	.long	ZCMain_main_info
	.long	0
.text
	.align 4,0x90
	.long	S2Zc_srt-(ZCMain_main_info)+20
	.long	65539
	.long	0
	.long	65551
.globl ZCMain_main_info
ZCMain_main_info:
.Lc30P:
	jmp Main_main2_info
.section .data
	.align 4
.align 1
S2Zc_srt:
	.long	DTkUIHCJaUgHU6UDGcO9WY_HasteziPrimziAny_jsNull_closure
	.long	Ludo_move1_closure
	.long	Main_main1_closure
	.long	Main_mainzuf1_closure
	.long	base_GHCziTopHandler_runMainIO1_closure
	.long	Main_main2_closure
.ident "GHC 7.10.2"

